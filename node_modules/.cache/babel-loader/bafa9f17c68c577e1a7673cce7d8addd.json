{"ast":null,"code":"var _jsxFileName = \"/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js\",\n    _s = $RefreshSig$();\n\n// Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { collection, query, where, getDocs, updateDoc, doc } from 'firebase/firestore';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { db, auth } from './firebase'; // Se importa de manera correcta\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [specialties, setSpecialties] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [userAppointments, setUserAppointments] = useState([]);\n  const [selectedSpecialty, setSelectedSpecialty] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [adminView, setAdminView] = useState('specialties');\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      if (currentUser) {\n        setUser(currentUser);\n        setIsAdmin(currentUser.email === 'admin@clinica.com');\n        loadSpecialties();\n        loadUserAppointments();\n      }\n    });\n    return () => unsubscribe();\n  }, [loadUserAppointments]);\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadSpecialties = async () => {\n    try {\n      const specialtiesRef = collection(db, 'specialties');\n      const specialtiesSnapshot = await getDocs(specialtiesRef);\n      const specialtiesList = specialtiesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setSpecialties(specialtiesList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadDoctors = async specialty => {\n    try {\n      const doctorsRef = collection(db, 'doctors');\n      const q = query(doctorsRef, where('specialty', '==', specialty));\n      const doctorsSnapshot = await getDocs(q);\n      const doctorsList = doctorsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setDoctors(doctorsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadAvailableSlots = async doctorId => {\n    try {\n      const slotsRef = collection(db, 'appointments');\n      const q = query(slotsRef, where('doctorId', '==', doctorId), where('available', '==', true));\n      const slotsSnapshot = await getDocs(q);\n      const slotsList = slotsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setAvailableSlots(slotsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadUserAppointments = async () => {\n    if (!user) return;\n\n    try {\n      const appointmentsRef = collection(db, 'appointments');\n      const q = query(appointmentsRef, where('userId', '==', user.uid), where('available', '==', false));\n      const appointmentsSnapshot = await getDocs(q);\n      const appointmentsList = appointmentsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUserAppointments(appointmentsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const bookAppointment = async slotId => {\n    try {\n      const slotRef = doc(db, 'appointments', slotId);\n      await updateDoc(slotRef, {\n        available: false,\n        userId: user.uid\n      });\n      await loadUserAppointments();\n      await loadAvailableSlots(selectedDoctor);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const cancelAppointment = async slotId => {\n    try {\n      const slotRef = doc(db, 'appointments', slotId);\n      await updateDoc(slotRef, {\n        available: true,\n        userId: null\n      });\n      await loadUserAppointments();\n      await loadAvailableSlots(selectedDoctor);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const renderLoginView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Iniciar Sesi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleLogin,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  className: \"form-label\",\n                  children: \"Correo Electr\\xF3nico\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: \"form-label\",\n                  children: \"Contrase\\xF1a\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-danger\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Iniciar Sesi\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  onClick: handleRegister,\n                  children: \"Registrarse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n\n  const renderMainView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Reserva de Citas M\\xE9dicas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary me-2\",\n            onClick: () => setAdminView(adminView === 'specialties' ? 'doctors' : 'specialties'),\n            children: \"Panel Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => auth.signOut(),\n            children: \"Cerrar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), isAdmin && adminView === 'specialties' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Especialidades M\\xE9dicas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: specialties.map(specialty => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [specialty.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary ms-2\",\n              onClick: () => loadDoctors(specialty.name),\n              children: \"Ver Doctores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this)]\n          }, specialty.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), isAdmin && adminView === 'doctors' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Doctores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [doctor.name, \" - \", doctor.specialty, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info ms-2\",\n              onClick: () => loadAvailableSlots(doctor.id),\n              children: \"Ver Disponibilidad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)]\n          }, doctor.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), availableSlots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Disponibilidad de Citas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [slot.time, \" - \", slot.doctorName, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success ms-2\",\n              onClick: () => bookAppointment(slot.id),\n              children: \"Reservar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)]\n          }, slot.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), userAppointments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Mis Citas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [appointment.time, \" - \", appointment.doctorName, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger ms-2\",\n              onClick: () => cancelAppointment(appointment.id),\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this)]\n          }, appointment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n\n  return user ? renderMainView() : renderLoginView();\n}\n\n_s(Dashboard, \"NSlNNaVl11eKICmiRxHupjpfXX8=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js"],"names":["React","useState","useEffect","collection","query","where","getDocs","updateDoc","doc","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","db","auth","Dashboard","user","setUser","email","setEmail","password","setPassword","error","setError","specialties","setSpecialties","doctors","setDoctors","availableSlots","setAvailableSlots","userAppointments","setUserAppointments","selectedSpecialty","setSelectedSpecialty","selectedDoctor","setSelectedDoctor","isAdmin","setIsAdmin","adminView","setAdminView","unsubscribe","currentUser","loadSpecialties","loadUserAppointments","handleLogin","e","preventDefault","err","message","handleRegister","specialtiesRef","specialtiesSnapshot","specialtiesList","docs","map","id","data","loadDoctors","specialty","doctorsRef","q","doctorsSnapshot","doctorsList","loadAvailableSlots","doctorId","slotsRef","slotsSnapshot","slotsList","appointmentsRef","uid","appointmentsSnapshot","appointmentsList","bookAppointment","slotId","slotRef","available","userId","cancelAppointment","renderLoginView","target","value","renderMainView","signOut","name","doctor","length","slot","time","doctorName","appointment"],"mappings":"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","sourcesContent":["// Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { \n  collection, \n  query, \n  where, \n  getDocs, \n  updateDoc, \n  doc \n} from 'firebase/firestore';\nimport { \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword,\n  onAuthStateChanged\n} from 'firebase/auth';\nimport { db, auth } from './firebase'; // Se importa de manera correcta\n\nfunction Dashboard() {\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const [specialties, setSpecialties] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [userAppointments, setUserAppointments] = useState([]);\n\n  const [selectedSpecialty, setSelectedSpecialty] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [adminView, setAdminView] = useState('specialties');\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      if (currentUser) {\n        setUser(currentUser);\n        setIsAdmin(currentUser.email === 'admin@clinica.com');\n        loadSpecialties();\n        loadUserAppointments(); \n      }\n    });\n\n    return () => unsubscribe();\n  }, [loadUserAppointments]);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadSpecialties = async () => {\n    try {\n      const specialtiesRef = collection(db, 'specialties');\n      const specialtiesSnapshot = await getDocs(specialtiesRef);\n      const specialtiesList = specialtiesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setSpecialties(specialtiesList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadDoctors = async (specialty) => {\n    try {\n      const doctorsRef = collection(db, 'doctors');\n      const q = query(doctorsRef, where('specialty', '==', specialty));\n      const doctorsSnapshot = await getDocs(q);\n      const doctorsList = doctorsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setDoctors(doctorsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadAvailableSlots = async (doctorId) => {\n    try {\n      const slotsRef = collection(db, 'appointments');\n      const q = query(\n        slotsRef, \n        where('doctorId', '==', doctorId),\n        where('available', '==', true)\n      );\n      const slotsSnapshot = await getDocs(q);\n      const slotsList = slotsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setAvailableSlots(slotsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadUserAppointments = async () => {\n    if (!user) return;\n    try {\n      const appointmentsRef = collection(db, 'appointments');\n      const q = query(\n        appointmentsRef, \n        where('userId', '==', user.uid),\n        where('available', '==', false)\n      );\n      const appointmentsSnapshot = await getDocs(q);\n      const appointmentsList = appointmentsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUserAppointments(appointmentsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const bookAppointment = async (slotId) => {\n    try {\n      const slotRef = doc(db, 'appointments', slotId);\n      await updateDoc(slotRef, {\n        available: false,\n        userId: user.uid\n      });\n      await loadUserAppointments();\n      await loadAvailableSlots(selectedDoctor);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const cancelAppointment = async (slotId) => {\n    try {\n      const slotRef = doc(db, 'appointments', slotId);\n      await updateDoc(slotRef, {\n        available: true,\n        userId: null\n      });\n      await loadUserAppointments();\n      await loadAvailableSlots(selectedDoctor);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const renderLoginView = () => (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h2 className=\"text-center\">Iniciar Sesión</h2>\n            </div>\n            <div className=\"card-body\">\n              <form onSubmit={handleLogin}>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"email\" className=\"form-label\">Correo Electrónico</label>\n                  <input \n                    type=\"email\" \n                    className=\"form-control\" \n                    id=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required \n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"password\" className=\"form-label\">Contraseña</label>\n                  <input \n                    type=\"password\" \n                    className=\"form-control\" \n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required \n                  />\n                </div>\n                {error && (\n                  <div className=\"alert alert-danger\">{error}</div>\n                )}\n                <div className=\"d-grid gap-2\">\n                  <button type=\"submit\" className=\"btn btn-primary\">Iniciar Sesión</button>\n                  <button \n                    type=\"button\" \n                    className=\"btn btn-secondary\"\n                    onClick={handleRegister}\n                  >\n                    Registrarse\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderMainView = () => (\n    <div className=\"container mt-4\">\n      <div className=\"row\">\n        <div className=\"col-12 d-flex justify-content-between align-items-center mb-4\">\n          <h1>Reserva de Citas Médicas</h1>\n          <div>\n            {isAdmin && (\n              <button \n                className=\"btn btn-outline-secondary me-2\"\n                onClick={() => setAdminView(adminView === 'specialties' ? 'doctors' : 'specialties')}\n              >\n                Panel Admin\n              </button>\n            )}\n            <button \n              className=\"btn btn-danger\"\n              onClick={() => auth.signOut()}\n            >\n              Cerrar Sesión\n            </button>\n          </div>\n        </div>\n        {/* Renderiza el contenido según la vista de administrador */}\n        {isAdmin && adminView === 'specialties' && (\n          <div className=\"col-12\">\n            <h3>Especialidades Médicas</h3>\n            <ul>\n              {specialties.map(specialty => (\n                <li key={specialty.id}>\n                  {specialty.name}\n                  <button \n                    className=\"btn btn-primary ms-2\"\n                    onClick={() => loadDoctors(specialty.name)}\n                  >\n                    Ver Doctores\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        \n        {/* Sección de doctores */}\n        {isAdmin && adminView === 'doctors' && (\n          <div className=\"col-12\">\n            <h3>Doctores</h3>\n            <ul>\n              {doctors.map(doctor => (\n                <li key={doctor.id}>\n                  {doctor.name} - {doctor.specialty}\n                  <button \n                    className=\"btn btn-info ms-2\"\n                    onClick={() => loadAvailableSlots(doctor.id)}\n                  >\n                    Ver Disponibilidad\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {/* Sección de disponibilidad de citas */}\n        {availableSlots.length > 0 && (\n          <div className=\"col-12 mt-4\">\n            <h3>Disponibilidad de Citas</h3>\n            <ul>\n              {availableSlots.map(slot => (\n                <li key={slot.id}>\n                  {slot.time} - {slot.doctorName}\n                  <button \n                    className=\"btn btn-success ms-2\"\n                    onClick={() => bookAppointment(slot.id)}\n                  >\n                    Reservar\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        \n        {/* Sección de citas del usuario */}\n        {userAppointments.length > 0 && (\n          <div className=\"col-12 mt-4\">\n            <h3>Mis Citas</h3>\n            <ul>\n              {userAppointments.map(appointment => (\n                <li key={appointment.id}>\n                  {appointment.time} - {appointment.doctorName}\n                  <button \n                    className=\"btn btn-danger ms-2\"\n                    onClick={() => cancelAppointment(appointment.id)}\n                  >\n                    Cancelar\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  return user ? renderMainView() : renderLoginView();\n}\n\nexport default Dashboard;\n\n"]},"metadata":{},"sourceType":"module"}