{"ast":null,"code":"var _jsxFileName = \"/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from './firebase';\nimport { doc, addDoc, collection, updateDoc, deleteDoc, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [nombre, setNombre] = useState();\n  const [descripcion, setDescripcion] = useState();\n  const [precio, setPrecio] = useState();\n  const [fetchData, setFetchData] = useState([]);\n  const [id, setId] = useState([]); // Base de datos por referencia\n\n  const dbref = collection(db, 'crud-React'); // Almacenando en la base de datos\n\n  const add = async () => {\n    if (!nombre || !descripcion || !precio) {\n      alert('Por favor, completa todos los campos');\n      return;\n    }\n\n    try {\n      await addDoc(dbref, {\n        Nombre: nombre,\n        Precio: precio,\n        Descripcion: descripcion\n      });\n      alert(\"Los Datos se Agregaron Correctamente\");\n      fetch(); // Actualizar datos sin recargar la página\n    } catch (error) {\n      alert(\"Los Datos no se pudieron Agregar, intenta de nuevo\");\n      console.error(error);\n    }\n  }; // Obtención de la base de datos\n\n\n  const fetch = async () => {\n    const snapshot = await getDocs(dbref);\n    const fetchdata = snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setFetchData(fetchdata);\n    console.log(fetchdata);\n  };\n\n  useEffect(() => {\n    fetch();\n  }, []); // Editar la información\n\n  const passData = async id => {\n    const matchId = fetchData.find(data => {\n      return data.id === id;\n    });\n    setNombre(matchId.Nombre);\n    setPrecio(matchId.Precio);\n    setDescripcion(matchId.Descripcion);\n    setId(matchId.id);\n  }; // Actualizar la información\n\n\n  const update = async () => {\n    const updateref = doc(dbref, id);\n\n    try {\n      await updateDoc(updateref, {\n        Nombre: nombre,\n        Precio: precio,\n        Descripcion: descripcion\n      });\n      alert('Actualizado correctamente');\n      fetch(); // Actualizar los datos sin recargar la página\n    } catch (error) {\n      alert(error, 'Hubo un problema al actualizar los datos');\n    }\n  }; // Eliminando datos de la base de datos\n\n\n  const del = async id => {\n    const delref = doc(dbref, id);\n\n    try {\n      await deleteDoc(delref);\n      alert('Se borró correctamente la información');\n      fetch(); // Actualizar los datos sin recargar la página\n    } catch (e) {\n      alert(e, 'No se borró la información, intenta de nuevo');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"A\\xF1adir o Actualizar Producto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre\",\n          autoComplete: \"off\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Precio\",\n          autoComplete: \"off\",\n          value: precio,\n          onChange: e => setPrecio(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Descripcion\",\n          autoComplete: \"off\",\n          value: descripcion,\n          onChange: e => setDescripcion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: add,\n        children: \"A\\xF1adir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: update,\n        children: \"Actualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Base de Datos CRUD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: fetchData.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Nombre: \", data.Nombre]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Precio: \", data.Precio]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Descripci\\xF3n: \", data.Descripcion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => passData(data.id),\n              children: \"Actualizar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => del(data.id),\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"rhdCbormbrxxx7DgVJp3K8MKDaI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js"],"names":["React","useEffect","useState","db","doc","addDoc","collection","updateDoc","deleteDoc","getDocs","Dashboard","nombre","setNombre","descripcion","setDescripcion","precio","setPrecio","fetchData","setFetchData","id","setId","dbref","add","alert","Nombre","Precio","Descripcion","fetch","error","console","snapshot","fetchdata","docs","map","data","log","passData","matchId","find","update","updateref","del","delref","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { db } from './firebase';\nimport { doc, addDoc, collection, updateDoc, deleteDoc, getDocs } from 'firebase/firestore';\n\nconst Dashboard = () => {\n  const [nombre, setNombre] = useState();\n  const [descripcion, setDescripcion] = useState();\n  const [precio, setPrecio] = useState();\n  const [fetchData, setFetchData] = useState([]);\n  const [id, setId] = useState([]);\n\n  // Base de datos por referencia\n  const dbref = collection(db, 'crud-React');\n\n  // Almacenando en la base de datos\n  const add = async () => {\n    if (!nombre || !descripcion || !precio) {\n      alert('Por favor, completa todos los campos');\n      return;\n    }\n    try {\n      await addDoc(dbref, { Nombre: nombre, Precio: precio, Descripcion: descripcion });\n      alert(\"Los Datos se Agregaron Correctamente\");\n      fetch();  // Actualizar datos sin recargar la página\n    } catch (error) {\n      alert(\"Los Datos no se pudieron Agregar, intenta de nuevo\");\n      console.error(error);\n    }\n  };\n\n  // Obtención de la base de datos\n  const fetch = async () => {\n    const snapshot = await getDocs(dbref);\n    const fetchdata = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n    setFetchData(fetchdata);\n    console.log(fetchdata);\n  };\n\n  useEffect(() => {\n    fetch();\n  }, []);\n\n  // Editar la información\n  const passData = async (id) => {\n    const matchId = fetchData.find((data) => {\n      return data.id === id;\n    });\n    setNombre(matchId.Nombre);\n    setPrecio(matchId.Precio);\n    setDescripcion(matchId.Descripcion);\n    setId(matchId.id);\n  };\n\n  // Actualizar la información\n  const update = async () => {\n    const updateref = doc(dbref, id);\n    try {\n      await updateDoc(updateref, { Nombre: nombre, Precio: precio, Descripcion: descripcion });\n      alert('Actualizado correctamente');\n      fetch();  // Actualizar los datos sin recargar la página\n    } catch (error) {\n      alert(error, 'Hubo un problema al actualizar los datos');\n    }\n  };\n\n  // Eliminando datos de la base de datos\n  const del = async (id) => {\n    const delref = doc(dbref, id);\n    try {\n      await deleteDoc(delref);\n      alert('Se borró correctamente la información');\n      fetch();  // Actualizar los datos sin recargar la página\n    } catch (e) {\n      alert(e, 'No se borró la información, intenta de nuevo');\n    }\n  };\n\n  return (\n    <>\n      <div className='form_container'>\n        <h2>Añadir o Actualizar Producto</h2>\n        <div className=\"box\">\n          <input\n            type=\"text\"\n            placeholder=\"Nombre\"\n            autoComplete=\"off\"\n            value={nombre}\n            onChange={(e) => setNombre(e.target.value)}\n          />\n        </div>\n        <div className=\"box\">\n          <input\n            type=\"number\"\n            placeholder=\"Precio\"\n            autoComplete=\"off\"\n            value={precio}\n            onChange={(e) => setPrecio(e.target.value)}\n          />\n        </div>\n        <div className=\"box\">\n          <input\n            type=\"text\"\n            placeholder=\"Descripcion\"\n            autoComplete=\"off\"\n            value={descripcion}\n            onChange={(e) => setDescripcion(e.target.value)}\n          />\n        </div>\n        <button onClick={add}>Añadir</button>\n        <button onClick={update}>Actualizar</button>\n      </div>\n\n      <div className=\"database\">\n        <h2>Base de Datos CRUD</h2>\n        <div className=\"container\">\n          {fetchData.map((data) => {\n            return (\n              <div className=\"box\" key={data.id}>\n                <h2>Nombre: {data.Nombre}</h2>\n                <h2>Precio: {data.Precio}</h2>\n                <h2>Descripción: {data.Descripcion}</h2>\n                <button onClick={() => passData(data.id)}>Actualizar</button>\n                <button onClick={() => del(data.id)}>Eliminar</button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n\n"]},"metadata":{},"sourceType":"module"}