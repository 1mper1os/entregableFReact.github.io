{"ast":null,"code":"var _jsxFileName = \"/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { db } from './firebase';\nimport { doc, addDoc, collection, updateDoc, deleteDoc, getDocs } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [nombre, setNombre] = useState();\n  const [descripcion, setDescripcion] = useState();\n  const [precio, setPrecio] = useState();\n  const [fetchData, setFetchData] = useState([]);\n  const [id, setId] = useState([]); // base de datos por referencia\n\n  const dbref = collection(db, 'crud-React'); // almacenando en la base de datos\n\n  const add = async () => {\n    const addata = await addDoc(dbref, {\n      Nombre: nombre,\n      Precio: precio,\n      Descripcion: descripcion\n    });\n\n    if (addata) {\n      alert(\"Los Datos se Agregaron Correctamente\");\n      window.location.reload();\n    } else {\n      alert(\"Los Datos no se pudieron Agregar, vuelvelo a intentar\");\n    }\n  }; // obtencion de la base de datos \n\n\n  const fetch = async () => {\n    const snapshot = await getDocs(dbref);\n    const fetchdata = snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setFetchData(fetchdata);\n    console.log(fetchdata);\n  };\n\n  useEffect(() => {\n    fetch();\n  }, []); // editar la informacion \n\n  const passData = async id => {\n    const matchId = fetchData.find(data => {\n      return data.id === id;\n    });\n    setNombre(matchId.Nombre);\n    setPrecio(matchId.Precio);\n    setDescripcion(matchId.Descripcion);\n    setId(matchId.id);\n  }; // actualizar la informacion\n\n\n  const update = async () => {\n    const updateref = doc(dbref, id);\n\n    try {\n      const udpatedata = await updateDoc(updateref, {\n        Nombre: nombre,\n        Precio: precio,\n        Descripcion: descripcion\n      });\n      alert('Actualizado correctamente');\n      window.location.reload();\n    } catch (error) {\n      alert(error, 'Hubo un problema al actualizar los datos');\n    }\n  }; // eliminando datos de la base de datos\n\n\n  const del = async id => {\n    const delref = doc(dbref, id);\n\n    try {\n      await deleteDoc(delref);\n      alert('Se borro correctamente la informacion');\n      window.location.reload();\n    } catch (e) {\n      alert(e, 'No se borro la informacion intentelo de nuevo');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"A\\xF1adir o Actualizar Producto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre\",\n          autoComplete: \"off\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Precio\",\n          autoComplete: \"off\",\n          value: precio,\n          onChange: e => setPrecio(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Descripcion\",\n          autoComplete: \"off\",\n          value: descripcion,\n          onChange: e => setDescripcion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: add,\n        children: \"A\\xF1adir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: update,\n        children: \"Actualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Base de Datos CRUD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: fetchData.map(data => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Nombre: \", data.Nombre]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Precio: \", data.Precio]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Descripci\\xF3n: \", data.Descripcion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => passData(data.id),\n                children: \"Actualizar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => del(data.id),\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"rhdCbormbrxxx7DgVJp3K8MKDaI=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js"],"names":["React","useEffect","useState","db","doc","addDoc","collection","updateDoc","deleteDoc","getDocs","Dashboard","nombre","setNombre","descripcion","setDescripcion","precio","setPrecio","fetchData","setFetchData","id","setId","dbref","add","addata","Nombre","Precio","Descripcion","alert","window","location","reload","fetch","snapshot","fetchdata","docs","map","data","console","log","passData","matchId","find","update","updateref","udpatedata","error","del","delref","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {db} from './firebase'\nimport {doc, addDoc, collection, updateDoc, deleteDoc, getDocs} from 'firebase/firestore'\n\nconst Dashboard = () =>{\n  const [nombre, setNombre] = useState();\n  const [descripcion, setDescripcion] = useState();\n  const [precio, setPrecio] = useState();\n  const [fetchData, setFetchData] = useState([]);\n  const [id, setId] = useState([]);\n\n  // base de datos por referencia\n  const dbref = collection(db , 'crud-React');\n  // almacenando en la base de datos\n  const add = async () => {\n    const addata = await addDoc(dbref, {Nombre : nombre, Precio : precio, Descripcion : descripcion}); \n    if(addata){\n      alert(\"Los Datos se Agregaron Correctamente\");\n      window.location.reload();\n    }else{\n      alert(\"Los Datos no se pudieron Agregar, vuelvelo a intentar\");\n    }\n  } \n\n  // obtencion de la base de datos \n  \n  const fetch = async() => {\n    const snapshot = await getDocs(dbref);\n    const fetchdata = snapshot.docs.map((doc =>({id : doc.id, ...doc.data()})))\n    setFetchData(fetchdata);\n    console.log(fetchdata);\n  }\n  \n  useEffect(() => {\n    fetch();\n  }, [])\n\n  // editar la informacion \n  const passData = async(id) =>{\n    const matchId = fetchData.find((data) => {\n      return data.id === id;\n    })\n    setNombre(matchId.Nombre)\n    setPrecio(matchId.Precio)\n    setDescripcion(matchId.Descripcion)\n    setId(matchId.id)\n  }\n\n  // actualizar la informacion\n  const update = async() =>{\n    const updateref = doc(dbref, id) \n  try{\n    const udpatedata = await updateDoc(updateref, {Nombre: nombre, Precio : precio, Descripcion : descripcion})\n      alert('Actualizado correctamente');\n      window.location.reload();\n    }catch(error){\n      alert(error, 'Hubo un problema al actualizar los datos');\n    }\n  }\n\n  // eliminando datos de la base de datos\n\n  const del = async (id) =>{\n    const delref = doc(dbref, id)\n    try {\n      await deleteDoc(delref); \n      alert('Se borro correctamente la informacion');\n      window.location.reload();\n    } catch (e) {\n      alert(e, 'No se borro la informacion intentelo de nuevo');\n    }\n  }\n  return(\n    <>\n      <div className='form_container'>\n        <h2>Añadir o Actualizar Producto</h2>\n        <div className=\"box\">\n          <input\n            type=\"text\"\n            placeholder=\"Nombre\"\n            autoComplete=\"off\"\n            value = {nombre}\n            onChange={(e) => setNombre(e.target.value)}\n          />\n\n        </div>\n        <div className=\"box\">\n          <input\n            type=\"number\"\n            placeholder=\"Precio\"\n            autoComplete=\"off\"\n            value = {precio}\n            onChange={(e) => setPrecio(e.target.value)}\n          />\n        </div>\n        <div className=\"box\">\n          <input\n            type=\"text\"\n            placeholder=\"Descripcion\"\n            autoComplete=\"off\"\n            value = {descripcion}\n            onChange={(e) => setDescripcion(e.target.value)}\n          />\n        </div>\n        <button onClick={add}>Añadir</button>\n        <button onClick={update}>Actualizar</button>\n      </div>\n\n      <div className=\"database\">\n        <h2>Base de Datos CRUD</h2>\n        <div className=\"container\">\n          {\n            fetchData.map((data) => {\n              return(\n                <>\n                <div className=\"box\">\n                  <h2>Nombre: {data.Nombre}</h2>\n                  <h2>Precio: {data.Precio}</h2>\n                  <h2>Descripción: {data.Descripcion}</h2>\n                  <button onClick={()=>passData(data.id)}>Actualizar</button>\n                  <button onClick={()=>del(data.id)}>Eliminar</button>\n                </div>\n                </>\n              )\n            })\n          }\n        </div>\n      </div>\n    </>\n  )\n}\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}