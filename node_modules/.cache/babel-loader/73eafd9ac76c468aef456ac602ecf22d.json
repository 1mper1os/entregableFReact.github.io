{"ast":null,"code":"var _jsxFileName = \"/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js\",\n    _s = $RefreshSig$();\n\n// Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { collection, query, where, getDocs, addDoc, updateDoc, deleteDoc, doc } from 'firebase/firestore';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { db, auth } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [specialties, setSpecialties] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [newSpecialtyName, setNewSpecialtyName] = useState('');\n  const [newDoctorName, setNewDoctorName] = useState('');\n  const [selectedDoctorId, setSelectedDoctorId] = useState(null);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [userAppointments, setUserAppointments] = useState([]);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      if (currentUser) {\n        setUser(currentUser);\n        loadSpecialties();\n        loadDoctors();\n        loadUsers();\n        loadUserAppointments();\n      } else {\n        setUser(null);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadSpecialties = async () => {\n    try {\n      const specialtiesRef = collection(db, 'specialties');\n      const specialtiesSnapshot = await getDocs(specialtiesRef);\n      const specialtiesList = specialtiesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setSpecialties(specialtiesList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadDoctors = async () => {\n    try {\n      const doctorsRef = collection(db, 'doctors');\n      const doctorsSnapshot = await getDocs(doctorsRef);\n      const doctorsList = doctorsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setDoctors(doctorsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadUsers = async () => {\n    try {\n      // Asumiendo que tienes una colección de usuarios en Firestore\n      const usersRef = collection(db, 'users');\n      const usersSnapshot = await getDocs(usersRef);\n      const usersList = usersSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUsers(usersList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadUserAppointments = async () => {\n    if (!user) return;\n\n    try {\n      const appointmentsRef = collection(db, 'appointments');\n      const q = query(appointmentsRef, where('userId', '==', user.uid), where('available', '==', false));\n      const appointmentsSnapshot = await getDocs(q);\n      const appointmentsList = appointmentsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUserAppointments(appointmentsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Funciones para manejar especialidades\n\n\n  const addSpecialty = async () => {\n    if (!newSpecialtyName) return;\n\n    try {\n      await addDoc(collection(db, 'specialties'), {\n        name: newSpecialtyName\n      });\n      setNewSpecialtyName('');\n      loadSpecialties(); // Recargar especialidades\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const deleteSpecialty = async id => {\n    try {\n      await deleteDoc(doc(db, 'specialties', id));\n      loadSpecialties(); // Recargar especialidades\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Funciones para manejar doctores\n\n\n  const addDoctor = async () => {\n    if (!newDoctorName || !selectedDoctorId) return;\n\n    try {\n      await addDoc(collection(db, 'doctors'), {\n        name: newDoctorName\n      });\n      setNewDoctorName('');\n      loadDoctors(); // Recargar doctores\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const deleteDoctor = async id => {\n    try {\n      await deleteDoc(doc(db, 'doctors', id));\n      loadDoctors(); // Recargar doctores\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Funciones para manejar usuarios\n\n\n  const deleteUser = async id => {\n    try {\n      await deleteDoc(doc(db, 'users', id));\n      loadUsers(); // Recargar usuarios\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Renderiza la vista de inicio de sesión\n\n\n  const renderLoginView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Iniciar Sesi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleLogin,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  className: \"form-label\",\n                  children: \"Correo Electr\\xF3nico\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: \"form-label\",\n                  children: \"Contrase\\xF1a\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-danger\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Iniciar Sesi\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  onClick: handleRegister,\n                  children: \"Registrarse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this); // Renderiza la vista principal del dashboard\n\n\n  const renderMainView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Especialidades M\\xE9dicas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newSpecialtyName,\n      onChange: e => setNewSpecialtyName(e.target.value),\n      placeholder: \"Nueva Especialidad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addSpecialty,\n      className: \"btn btn-success\",\n      children: \"Agregar Especialidad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: specialties.map(specialty => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [specialty.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteSpecialty(specialty.id),\n          className: \"btn btn-danger ms-2\",\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 24\n        }, this)]\n      }, specialty.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Doctores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newDoctorName,\n      onChange: e => setNewDoctorName(e.target.value),\n      placeholder: \"Nuevo Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addDoctor,\n      className: \"btn btn-success\",\n      children: \"Agregar Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [doctor.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteDoctor(doctor.id),\n          className: \"btn btn-danger ms-2\",\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 24\n        }, this)]\n      }, doctor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Usuarios Registrados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(userItem => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [userItem.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteUser(userItem.id),\n          className: \"btn btn-danger ms-2\",\n          children: \"Eliminar Usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 24\n        }, this)]\n      }, userItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 12\n    }, this), userAppointments.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mis Citas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [appointment.time, \" - \", appointment.doctorName]\n        }, appointment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 28\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 8\n  }, this);\n\n  return user ? renderMainView() : renderLoginView();\n}\n\n_s(Dashboard, \"f6wP6LY38AYpMtsEuAe1uLI7Z5c=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js"],"names":["React","useState","useEffect","collection","query","where","getDocs","addDoc","updateDoc","deleteDoc","doc","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","db","auth","Dashboard","user","setUser","email","setEmail","password","setPassword","error","setError","specialties","setSpecialties","doctors","setDoctors","users","setUsers","newSpecialtyName","setNewSpecialtyName","newDoctorName","setNewDoctorName","selectedDoctorId","setSelectedDoctorId","selectedUserId","setSelectedUserId","userAppointments","setUserAppointments","unsubscribe","currentUser","loadSpecialties","loadDoctors","loadUsers","loadUserAppointments","handleLogin","e","preventDefault","err","message","handleRegister","specialtiesRef","specialtiesSnapshot","specialtiesList","docs","map","id","data","doctorsRef","doctorsSnapshot","doctorsList","usersRef","usersSnapshot","usersList","appointmentsRef","q","uid","appointmentsSnapshot","appointmentsList","addSpecialty","name","deleteSpecialty","addDoctor","deleteDoctor","deleteUser","renderLoginView","target","value","renderMainView","specialty","doctor","userItem","length","appointment","time","doctorName"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,sCAAP;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,MAA5C,EAAoDC,SAApD,EAA+DC,SAA/D,EAA0EC,GAA1E,QAAqF,oBAArF;AACA,SAASC,0BAAT,EAAqCC,8BAArC,EAAqEC,kBAArE,QAA+F,eAA/F;AACA,SAASC,EAAT,EAAaC,IAAb,QAAyB,YAAzB;;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8B,gBAAD,EAAmBC,mBAAnB,IAA0C/B,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACgC,aAAD,EAAgBC,gBAAhB,IAAoCjC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACkC,gBAAD,EAAmBC,mBAAnB,IAA0CnC,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACoC,cAAD,EAAiBC,iBAAjB,IAAsCrC,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACsC,gBAAD,EAAmBC,mBAAnB,IAA0CvC,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuC,WAAW,GAAG5B,kBAAkB,CAACE,IAAD,EAAQ2B,WAAD,IAAiB;AAC1D,UAAIA,WAAJ,EAAiB;AACbxB,QAAAA,OAAO,CAACwB,WAAD,CAAP;AACAC,QAAAA,eAAe;AACfC,QAAAA,WAAW;AACXC,QAAAA,SAAS;AACTC,QAAAA,oBAAoB;AACvB,OAND,MAMO;AACH5B,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,KAVqC,CAAtC;AAWA,WAAO,MAAMuB,WAAW,EAAxB;AACH,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMM,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,YAAMtC,0BAA0B,CAACI,IAAD,EAAOI,KAAP,EAAcE,QAAd,CAAhC;AACAG,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAHD,CAGE,OAAO0B,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GARD;;AAUA,QAAMC,cAAc,GAAG,MAAOJ,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,YAAMrC,8BAA8B,CAACG,IAAD,EAAOI,KAAP,EAAcE,QAAd,CAApC;AACAG,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAHD,CAGE,OAAO0B,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GARD;;AAUA,QAAMR,eAAe,GAAG,YAAY;AAChC,QAAI;AACA,YAAMU,cAAc,GAAGlD,UAAU,CAACW,EAAD,EAAK,aAAL,CAAjC;AACA,YAAMwC,mBAAmB,GAAG,MAAMhD,OAAO,CAAC+C,cAAD,CAAzC;AACA,YAAME,eAAe,GAAGD,mBAAmB,CAACE,IAApB,CAAyBC,GAAzB,CAA6B/C,GAAG,KAAK;AAAEgD,QAAAA,EAAE,EAAEhD,GAAG,CAACgD,EAAV;AAAc,WAAGhD,GAAG,CAACiD,IAAJ;AAAjB,OAAL,CAAhC,CAAxB;AACAjC,MAAAA,cAAc,CAAC6B,eAAD,CAAd;AACH,KALD,CAKE,OAAOL,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GATD;;AAWA,QAAMP,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMgB,UAAU,GAAGzD,UAAU,CAACW,EAAD,EAAK,SAAL,CAA7B;AACA,YAAM+C,eAAe,GAAG,MAAMvD,OAAO,CAACsD,UAAD,CAArC;AACA,YAAME,WAAW,GAAGD,eAAe,CAACL,IAAhB,CAAqBC,GAArB,CAAyB/C,GAAG,KAAK;AAAEgD,QAAAA,EAAE,EAAEhD,GAAG,CAACgD,EAAV;AAAc,WAAGhD,GAAG,CAACiD,IAAJ;AAAjB,OAAL,CAA5B,CAApB;AACA/B,MAAAA,UAAU,CAACkC,WAAD,CAAV;AACH,KALD,CAKE,OAAOZ,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GATD;;AAWA,QAAMN,SAAS,GAAG,YAAY;AAC1B,QAAI;AACA;AACA,YAAMkB,QAAQ,GAAG5D,UAAU,CAACW,EAAD,EAAK,OAAL,CAA3B;AACA,YAAMkD,aAAa,GAAG,MAAM1D,OAAO,CAACyD,QAAD,CAAnC;AACA,YAAME,SAAS,GAAGD,aAAa,CAACR,IAAd,CAAmBC,GAAnB,CAAuB/C,GAAG,KAAK;AAAEgD,QAAAA,EAAE,EAAEhD,GAAG,CAACgD,EAAV;AAAc,WAAGhD,GAAG,CAACiD,IAAJ;AAAjB,OAAL,CAA1B,CAAlB;AACA7B,MAAAA,QAAQ,CAACmC,SAAD,CAAR;AACH,KAND,CAME,OAAOf,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GAVD;;AAYA,QAAML,oBAAoB,GAAG,YAAY;AACrC,QAAI,CAAC7B,IAAL,EAAW;;AACX,QAAI;AACA,YAAMiD,eAAe,GAAG/D,UAAU,CAACW,EAAD,EAAK,cAAL,CAAlC;AACA,YAAMqD,CAAC,GAAG/D,KAAK,CAAC8D,eAAD,EAAkB7D,KAAK,CAAC,QAAD,EAAW,IAAX,EAAiBY,IAAI,CAACmD,GAAtB,CAAvB,EAAmD/D,KAAK,CAAC,WAAD,EAAc,IAAd,EAAoB,KAApB,CAAxD,CAAf;AACA,YAAMgE,oBAAoB,GAAG,MAAM/D,OAAO,CAAC6D,CAAD,CAA1C;AACA,YAAMG,gBAAgB,GAAGD,oBAAoB,CAACb,IAArB,CAA0BC,GAA1B,CAA8B/C,GAAG,KAAK;AAAEgD,QAAAA,EAAE,EAAEhD,GAAG,CAACgD,EAAV;AAAc,WAAGhD,GAAG,CAACiD,IAAJ;AAAjB,OAAL,CAAjC,CAAzB;AACAnB,MAAAA,mBAAmB,CAAC8B,gBAAD,CAAnB;AACH,KAND,CAME,OAAOpB,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GAXD,CAnFiB,CAgGjB;;;AACA,QAAMoB,YAAY,GAAG,YAAY;AAC7B,QAAI,CAACxC,gBAAL,EAAuB;;AACvB,QAAI;AACA,YAAMxB,MAAM,CAACJ,UAAU,CAACW,EAAD,EAAK,aAAL,CAAX,EAAgC;AAAE0D,QAAAA,IAAI,EAAEzC;AAAR,OAAhC,CAAZ;AACAC,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAW,MAAAA,eAAe,GAHf,CAGmB;AACtB,KAJD,CAIE,OAAOO,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GATD;;AAWA,QAAMsB,eAAe,GAAG,MAAOf,EAAP,IAAc;AAClC,QAAI;AACA,YAAMjD,SAAS,CAACC,GAAG,CAACI,EAAD,EAAK,aAAL,EAAoB4C,EAApB,CAAJ,CAAf;AACAf,MAAAA,eAAe,GAFf,CAEmB;AACtB,KAHD,CAGE,OAAOO,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GAPD,CA5GiB,CAqHjB;;;AACA,QAAMuB,SAAS,GAAG,YAAY;AAC1B,QAAI,CAACzC,aAAD,IAAkB,CAACE,gBAAvB,EAAyC;;AACzC,QAAI;AACA,YAAM5B,MAAM,CAACJ,UAAU,CAACW,EAAD,EAAK,SAAL,CAAX,EAA4B;AAAE0D,QAAAA,IAAI,EAAEvC;AAAR,OAA5B,CAAZ;AACAC,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAU,MAAAA,WAAW,GAHX,CAGe;AAClB,KAJD,CAIE,OAAOM,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GATD;;AAWA,QAAMwB,YAAY,GAAG,MAAOjB,EAAP,IAAc;AAC/B,QAAI;AACA,YAAMjD,SAAS,CAACC,GAAG,CAACI,EAAD,EAAK,SAAL,EAAgB4C,EAAhB,CAAJ,CAAf;AACAd,MAAAA,WAAW,GAFX,CAEe;AAClB,KAHD,CAGE,OAAOM,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GAPD,CAjIiB,CA0IjB;;;AACA,QAAMyB,UAAU,GAAG,MAAOlB,EAAP,IAAc;AAC7B,QAAI;AACA,YAAMjD,SAAS,CAACC,GAAG,CAACI,EAAD,EAAK,OAAL,EAAc4C,EAAd,CAAJ,CAAf;AACAb,MAAAA,SAAS,GAFT,CAEa;AAChB,KAHD,CAGE,OAAOK,GAAP,EAAY;AACV1B,MAAAA,QAAQ,CAAC0B,GAAG,CAACC,OAAL,CAAR;AACH;AACJ,GAPD,CA3IiB,CAoJjB;;;AACA,QAAM0B,eAAe,GAAG,mBACpB;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACI;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AAAM,cAAA,QAAQ,EAAE9B,WAAhB;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACI;AAAO,kBAAA,OAAO,EAAC,OAAf;AAAuB,kBAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,SAAS,EAAC,cAA9B;AAA6C,kBAAA,EAAE,EAAC,OAAhD;AAAwD,kBAAA,KAAK,EAAE5B,KAA/D;AAAsE,kBAAA,QAAQ,EAAG6B,CAAD,IAAO5B,QAAQ,CAAC4B,CAAC,CAAC8B,MAAF,CAASC,KAAV,CAA/F;AAAiH,kBAAA,QAAQ;AAAzH;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,wCACI;AAAO,kBAAA,OAAO,EAAC,UAAf;AAA0B,kBAAA,SAAS,EAAC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,IAAI,EAAC,UAAZ;AAAuB,kBAAA,SAAS,EAAC,cAAjC;AAAgD,kBAAA,EAAE,EAAC,UAAnD;AAA8D,kBAAA,KAAK,EAAE1D,QAArE;AAA+E,kBAAA,QAAQ,EAAG2B,CAAD,IAAO1B,WAAW,CAAC0B,CAAC,CAAC8B,MAAF,CAASC,KAAV,CAA3G;AAA6H,kBAAA,QAAQ;AAArI;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,EASKxD,KAAK,iBACF;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,0BAAqCA;AAArC;AAAA;AAAA;AAAA;AAAA,sBAVR,eAYI;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAC,mBAAhC;AAAoD,kBAAA,OAAO,EAAE6B,cAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CArJiB,CAsLlB;;;AACA,QAAM4B,cAAc,GAAG,mBACnB;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAEjD,gBAFX;AAGI,MAAA,QAAQ,EAAGiB,CAAD,IAAOhB,mBAAmB,CAACgB,CAAC,CAAC8B,MAAF,CAASC,KAAV,CAHxC;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YALJ,eAWI;AAAQ,MAAA,OAAO,EAAER,YAAjB;AAA+B,MAAA,SAAS,EAAC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA,gBACK9C,WAAW,CAACgC,GAAZ,CAAgBwB,SAAS,iBACtB;AAAA,mBACKA,SAAS,CAACT,IADf,eAEI;AAAQ,UAAA,OAAO,EAAE,MAAMC,eAAe,CAACQ,SAAS,CAACvB,EAAX,CAAtC;AAAsD,UAAA,SAAS,EAAC,qBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAASuB,SAAS,CAACvB,EAAnB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAZJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAuBI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAEzB,aAFX;AAGI,MAAA,QAAQ,EAAGe,CAAD,IAAOd,gBAAgB,CAACc,CAAC,CAAC8B,MAAF,CAASC,KAAV,CAHrC;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YAvBJ,eA6BI;AAAQ,MAAA,OAAO,EAAEL,SAAjB;AAA4B,MAAA,SAAS,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BJ,eA8BI;AAAA,gBACK/C,OAAO,CAAC8B,GAAR,CAAYyB,MAAM,iBACf;AAAA,mBACKA,MAAM,CAACV,IADZ,eAEI;AAAQ,UAAA,OAAO,EAAE,MAAMG,YAAY,CAACO,MAAM,CAACxB,EAAR,CAAnC;AAAgD,UAAA,SAAS,EAAC,qBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAASwB,MAAM,CAACxB,EAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YA9BJ,eAwCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCJ,eAyCI;AAAA,gBACK7B,KAAK,CAAC4B,GAAN,CAAU0B,QAAQ,iBACf;AAAA,mBACKA,QAAQ,CAAChE,KADd,eAEI;AAAQ,UAAA,OAAO,EAAE,MAAMyD,UAAU,CAACO,QAAQ,CAACzB,EAAV,CAAjC;AAAgD,UAAA,SAAS,EAAC,qBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAASyB,QAAQ,CAACzB,EAAlB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAzCJ,EAmDKnB,gBAAgB,CAAC6C,MAAjB,GAA0B,CAA1B,iBACG;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACK7C,gBAAgB,CAACkB,GAAjB,CAAqB4B,WAAW,iBAC7B;AAAA,qBACKA,WAAW,CAACC,IADjB,SAC0BD,WAAW,CAACE,UADtC;AAAA,WAASF,WAAW,CAAC3B,EAArB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBApDR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAoEA,SAAOzC,IAAI,GAAG+D,cAAc,EAAjB,GAAsBH,eAAe,EAAhD;AACF;;GA5PQ7D,S;;KAAAA,S;AA8PT,eAAeA,SAAf","sourcesContent":["// Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { collection, query, where, getDocs, addDoc, updateDoc, deleteDoc, doc } from 'firebase/firestore';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { db, auth } from './firebase';\n\nfunction Dashboard() {\n    const [user, setUser] = useState(null);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const [specialties, setSpecialties] = useState([]);\n    const [doctors, setDoctors] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [newSpecialtyName, setNewSpecialtyName] = useState('');\n    const [newDoctorName, setNewDoctorName] = useState('');\n    const [selectedDoctorId, setSelectedDoctorId] = useState(null);\n    const [selectedUserId, setSelectedUserId] = useState(null);\n    const [userAppointments, setUserAppointments] = useState([]);\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n            if (currentUser) {\n                setUser(currentUser);\n                loadSpecialties();\n                loadDoctors();\n                loadUsers();\n                loadUserAppointments();\n            } else {\n                setUser(null);\n            }\n        });\n        return () => unsubscribe();\n    }, []);\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        try {\n            await signInWithEmailAndPassword(auth, email, password);\n            setError(null);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n        try {\n            await createUserWithEmailAndPassword(auth, email, password);\n            setError(null);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const loadSpecialties = async () => {\n        try {\n            const specialtiesRef = collection(db, 'specialties');\n            const specialtiesSnapshot = await getDocs(specialtiesRef);\n            const specialtiesList = specialtiesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n            setSpecialties(specialtiesList);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const loadDoctors = async () => {\n        try {\n            const doctorsRef = collection(db, 'doctors');\n            const doctorsSnapshot = await getDocs(doctorsRef);\n            const doctorsList = doctorsSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n            setDoctors(doctorsList);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const loadUsers = async () => {\n        try {\n            // Asumiendo que tienes una colección de usuarios en Firestore\n            const usersRef = collection(db, 'users');\n            const usersSnapshot = await getDocs(usersRef);\n            const usersList = usersSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n            setUsers(usersList);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const loadUserAppointments = async () => {\n        if (!user) return;\n        try {\n            const appointmentsRef = collection(db, 'appointments');\n            const q = query(appointmentsRef, where('userId', '==', user.uid), where('available', '==', false));\n            const appointmentsSnapshot = await getDocs(q);\n            const appointmentsList = appointmentsSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n            setUserAppointments(appointmentsList);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    // Funciones para manejar especialidades\n    const addSpecialty = async () => {\n        if (!newSpecialtyName) return;\n        try {\n            await addDoc(collection(db, 'specialties'), { name: newSpecialtyName });\n            setNewSpecialtyName('');\n            loadSpecialties(); // Recargar especialidades\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const deleteSpecialty = async (id) => {\n        try {\n            await deleteDoc(doc(db, 'specialties', id));\n            loadSpecialties(); // Recargar especialidades\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    // Funciones para manejar doctores\n    const addDoctor = async () => {\n        if (!newDoctorName || !selectedDoctorId) return;\n        try {\n            await addDoc(collection(db, 'doctors'), { name: newDoctorName });\n            setNewDoctorName('');\n            loadDoctors(); // Recargar doctores\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    const deleteDoctor = async (id) => {\n        try {\n            await deleteDoc(doc(db, 'doctors', id));\n            loadDoctors(); // Recargar doctores\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    // Funciones para manejar usuarios\n    const deleteUser = async (id) => {\n        try {\n            await deleteDoc(doc(db, 'users', id));\n            loadUsers(); // Recargar usuarios\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    // Renderiza la vista de inicio de sesión\n    const renderLoginView = () => (\n        <div className=\"container mt-5\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h2 className=\"text-center\">Iniciar Sesión</h2>\n                        </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={handleLogin}>\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Correo Electrónico</label>\n                                    <input type=\"email\" className=\"form-control\" id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Contraseña</label>\n                                    <input type=\"password\" className=\"form-control\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n                                </div>\n                                {error && (\n                                    <div className=\"alert alert-danger\">{error}</div>\n                                )}\n                                <div className=\"d-grid gap-2\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">Iniciar Sesión</button>\n                                    <button type=\"button\" className=\"btn btn-secondary\" onClick={handleRegister}>Registrarse</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n   // Renderiza la vista principal del dashboard\n   const renderMainView = () => (\n       <div className=\"container mt-4\">\n           <h1>Dashboard</h1>\n\n           {/* Sección de Especialidades */}\n           <h3>Especialidades Médicas</h3>\n           <input \n               type=\"text\" \n               value={newSpecialtyName} \n               onChange={(e) => setNewSpecialtyName(e.target.value)} \n               placeholder=\"Nueva Especialidad\"\n           />\n           <button onClick={addSpecialty} className=\"btn btn-success\">Agregar Especialidad</button>\n           <ul>\n               {specialties.map(specialty => (\n                   <li key={specialty.id}>\n                       {specialty.name}\n                       <button onClick={() => deleteSpecialty(specialty.id)} className=\"btn btn-danger ms-2\">Eliminar</button>\n                   </li>\n               ))}\n           </ul>\n\n           {/* Sección de Doctores */}\n           <h3>Doctores</h3>\n           <input \n               type=\"text\" \n               value={newDoctorName} \n               onChange={(e) => setNewDoctorName(e.target.value)} \n               placeholder=\"Nuevo Doctor\"\n           />\n           <button onClick={addDoctor} className=\"btn btn-success\">Agregar Doctor</button>\n           <ul>\n               {doctors.map(doctor => (\n                   <li key={doctor.id}>\n                       {doctor.name}\n                       <button onClick={() => deleteDoctor(doctor.id)} className=\"btn btn-danger ms-2\">Eliminar</button>\n                   </li>\n               ))}\n           </ul>\n\n           {/* Sección de Usuarios */}\n           <h3>Usuarios Registrados</h3>\n           <ul>\n               {users.map(userItem => (\n                   <li key={userItem.id}>\n                       {userItem.email}\n                       <button onClick={() => deleteUser(userItem.id)} className=\"btn btn-danger ms-2\">Eliminar Usuario</button>\n                   </li>\n               ))}\n           </ul>\n\n           {/* Sección de citas del usuario */}\n           {userAppointments.length > 0 && (\n               <>\n                   <h3>Mis Citas</h3>\n                   <ul>\n                       {userAppointments.map(appointment => (\n                           <li key={appointment.id}>\n                               {appointment.time} - {appointment.doctorName}\n                               {/* Aquí podrías agregar más acciones como cancelar la cita */}\n                           </li>\n                       ))}\n                   </ul>\n               </>\n           )}\n       </div>\n   );\n\n   return user ? renderMainView() : renderLoginView();\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}