{"ast":null,"code":"var _jsxFileName = \"/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [activeTab, setActiveTab] = useState(\"appointments\");\n  const [appointments, setAppointments] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingAppointment, setEditingAppointment] = useState(null); // Estados para el formulario de nueva cita\n\n  const [newAppointment, setNewAppointment] = useState({\n    specialty: '',\n    doctor: '',\n    date: '',\n    time: '',\n    notes: ''\n  }); // Cargar citas desde Firebase\n\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"appointments\"));\n        const fetchedAppointments = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setAppointments(fetchedAppointments);\n      } catch (error) {\n        console.error(\"Error fetching appointments: \", error);\n      }\n    };\n\n    fetchAppointments();\n  }, []); // Agregar nueva cita\n\n  const handleAddAppointment = async e => {\n    e.preventDefault();\n\n    try {\n      const docRef = await addDoc(collection(db, \"appointments\"), { ...newAppointment,\n        status: \"Pendiente\"\n      });\n      setAppointments([...appointments, {\n        id: docRef.id,\n        ...newAppointment,\n        status: \"Pendiente\"\n      }]); // Resetear formulario\n\n      setNewAppointment({\n        specialty: '',\n        doctor: '',\n        date: '',\n        time: '',\n        notes: ''\n      });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(\"Error adding appointment: \", error);\n    }\n  }; // Editar cita\n\n\n  const handleEditAppointment = async e => {\n    e.preventDefault();\n\n    try {\n      const appointmentRef = doc(db, \"appointments\", editingAppointment.id);\n      await updateDoc(appointmentRef, newAppointment);\n      setAppointments(appointments.map(app => app.id === editingAppointment.id ? { ...app,\n        ...newAppointment\n      } : app));\n      setEditingAppointment(null);\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(\"Error editing appointment: \", error);\n    }\n  }; // Eliminar cita\n\n\n  const handleDeleteAppointment = async id => {\n    try {\n      await deleteDoc(doc(db, \"appointments\", id));\n      setAppointments(appointments.filter(app => app.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting appointment: \", error);\n    }\n  }; // Modal de Nueva/Editar Cita\n\n\n  const renderAppointmentModal = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed inset-0 z-50 ${isModalOpen ? 'block' : 'hidden'} bg-black bg-opacity-50 flex items-center justify-center`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: editingAppointment ? 'Editar Cita' : 'Nueva Cita'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editingAppointment ? handleEditAppointment : handleAddAppointment,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Especialidad\",\n          value: newAppointment.specialty,\n          onChange: e => setNewAppointment({ ...newAppointment,\n            specialty: e.target.value\n          }),\n          className: \"w-full mb-2 p-2 border rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Doctor\",\n          value: newAppointment.doctor,\n          onChange: e => setNewAppointment({ ...newAppointment,\n            doctor: e.target.value\n          }),\n          className: \"w-full mb-2 p-2 border rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: newAppointment.date,\n          onChange: e => setNewAppointment({ ...newAppointment,\n            date: e.target.value\n          }),\n          className: \"w-full mb-2 p-2 border rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: newAppointment.time,\n          onChange: e => setNewAppointment({ ...newAppointment,\n            time: e.target.value\n          }),\n          className: \"w-full mb-2 p-2 border rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Notas\",\n          value: newAppointment.notes,\n          onChange: e => setNewAppointment({ ...newAppointment,\n            notes: e.target.value\n          }),\n          className: \"w-full mb-2 p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setIsModalOpen(false);\n              setEditingAppointment(null);\n              setNewAppointment({\n                specialty: '',\n                doctor: '',\n                date: '',\n                time: '',\n                notes: ''\n              });\n            },\n            className: \"px-4 py-2 bg-gray-200 rounded\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n            children: editingAppointment ? 'Actualizar' : 'Crear'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this); // Resto del c√≥digo anterior se mantiene igual...\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: renderAppointmentModal()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"sCwn3jgdoYU0DuU/owfusTomksk=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js"],"names":["React","useState","useEffect","Dashboard","activeTab","setActiveTab","appointments","setAppointments","isModalOpen","setIsModalOpen","editingAppointment","setEditingAppointment","newAppointment","setNewAppointment","specialty","doctor","date","time","notes","fetchAppointments","querySnapshot","getDocs","collection","db","fetchedAppointments","docs","map","doc","id","data","error","console","handleAddAppointment","e","preventDefault","docRef","addDoc","status","handleEditAppointment","appointmentRef","updateDoc","app","handleDeleteAppointment","deleteDoc","filter","renderAppointmentModal","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nconst Dashboard = () => {\n  const [activeTab, setActiveTab] = useState(\"appointments\");\n  const [appointments, setAppointments] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingAppointment, setEditingAppointment] = useState(null);\n\n  // Estados para el formulario de nueva cita\n  const [newAppointment, setNewAppointment] = useState({\n    specialty: '',\n    doctor: '',\n    date: '',\n    time: '',\n    notes: ''\n  });\n\n  // Cargar citas desde Firebase\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const querySnapshot = await getDocs(collection(db, \"appointments\"));\n        const fetchedAppointments = querySnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setAppointments(fetchedAppointments);\n      } catch (error) {\n        console.error(\"Error fetching appointments: \", error);\n      }\n    };\n\n    fetchAppointments();\n  }, []);\n\n  // Agregar nueva cita\n  const handleAddAppointment = async (e) => {\n    e.preventDefault();\n    try {\n      const docRef = await addDoc(collection(db, \"appointments\"), {\n        ...newAppointment,\n        status: \"Pendiente\"\n      });\n\n      setAppointments([\n        ...appointments, \n        { id: docRef.id, ...newAppointment, status: \"Pendiente\" }\n      ]);\n\n      // Resetear formulario\n      setNewAppointment({\n        specialty: '',\n        doctor: '',\n        date: '',\n        time: '',\n        notes: ''\n      });\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(\"Error adding appointment: \", error);\n    }\n  };\n\n  // Editar cita\n  const handleEditAppointment = async (e) => {\n    e.preventDefault();\n    try {\n      const appointmentRef = doc(db, \"appointments\", editingAppointment.id);\n      await updateDoc(appointmentRef, newAppointment);\n\n      setAppointments(appointments.map(app => \n        app.id === editingAppointment.id \n          ? { ...app, ...newAppointment } \n          : app\n      ));\n\n      setEditingAppointment(null);\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error(\"Error editing appointment: \", error);\n    }\n  };\n\n  // Eliminar cita\n  const handleDeleteAppointment = async (id) => {\n    try {\n      await deleteDoc(doc(db, \"appointments\", id));\n      setAppointments(appointments.filter(app => app.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting appointment: \", error);\n    }\n  };\n\n  // Modal de Nueva/Editar Cita\n  const renderAppointmentModal = () => (\n    <div className={`fixed inset-0 z-50 ${isModalOpen ? 'block' : 'hidden'} bg-black bg-opacity-50 flex items-center justify-center`}>\n      <div className=\"bg-white p-6 rounded-lg w-96\">\n        <h2 className=\"text-xl font-bold mb-4\">\n          {editingAppointment ? 'Editar Cita' : 'Nueva Cita'}\n        </h2>\n        <form onSubmit={editingAppointment ? handleEditAppointment : handleAddAppointment}>\n          <input\n            type=\"text\"\n            placeholder=\"Especialidad\"\n            value={newAppointment.specialty}\n            onChange={(e) => setNewAppointment({...newAppointment, specialty: e.target.value})}\n            className=\"w-full mb-2 p-2 border rounded\"\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Doctor\"\n            value={newAppointment.doctor}\n            onChange={(e) => setNewAppointment({...newAppointment, doctor: e.target.value})}\n            className=\"w-full mb-2 p-2 border rounded\"\n            required\n          />\n          <input\n            type=\"date\"\n            value={newAppointment.date}\n            onChange={(e) => setNewAppointment({...newAppointment, date: e.target.value})}\n            className=\"w-full mb-2 p-2 border rounded\"\n            required\n          />\n          <input\n            type=\"time\"\n            value={newAppointment.time}\n            onChange={(e) => setNewAppointment({...newAppointment, time: e.target.value})}\n            className=\"w-full mb-2 p-2 border rounded\"\n            required\n          />\n          <textarea\n            placeholder=\"Notas\"\n            value={newAppointment.notes}\n            onChange={(e) => setNewAppointment({...newAppointment, notes: e.target.value})}\n            className=\"w-full mb-2 p-2 border rounded\"\n          />\n          <div className=\"flex justify-end space-x-2\">\n            <button \n              type=\"button\" \n              onClick={() => {\n                setIsModalOpen(false);\n                setEditingAppointment(null);\n                setNewAppointment({specialty: '', doctor: '', date: '', time: '', notes: ''});\n              }} \n              className=\"px-4 py-2 bg-gray-200 rounded\"\n            >\n              Cancelar\n            </button>\n            <button \n              type=\"submit\" \n              className=\"px-4 py-2 bg-blue-500 text-white rounded\"\n            >\n              {editingAppointment ? 'Actualizar' : 'Crear'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n\n  // Resto del c√≥digo anterior se mantiene igual...\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {renderAppointmentModal()}\n      {/* Resto del dashboard */}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}