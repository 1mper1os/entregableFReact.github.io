{"ast":null,"code":"var _jsxFileName = \"/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, query, where, getDocs, updateDoc, addDoc, doc } from './firebase';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged } from './firebase/auth';\nimport firebaseConfig from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MedicalAppointmentsApp() {\n  _s();\n\n  // Estados de autenticación\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null); // Estados de la aplicación\n\n  const [specialties, setSpecialties] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [userAppointments, setUserAppointments] = useState([]); // Estados de selección\n\n  const [selectedSpecialty, setSelectedSpecialty] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState(''); // Estados de administrador\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [adminView, setAdminView] = useState('specialties'); // Inicializar Firebase\n\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n  const auth = getAuth(app); // Efecto para manejar la autenticación\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      if (currentUser) {\n        setUser(currentUser);\n        setIsAdmin(currentUser.email === 'admin@clinica.com');\n        loadSpecialties();\n        loadUserAppointments();\n      }\n    });\n    return () => unsubscribe();\n  }, []); // Funciones de autenticación\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleRegister = async e => {\n    e.preventDefault();\n\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Funciones de carga de datos\n\n\n  const loadSpecialties = async () => {\n    try {\n      const specialtiesRef = collection(db, 'specialties');\n      const specialtiesSnapshot = await getDocs(specialtiesRef);\n      const specialtiesList = specialtiesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setSpecialties(specialtiesList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadDoctors = async specialty => {\n    try {\n      const doctorsRef = collection(db, 'doctors');\n      const q = query(doctorsRef, where('specialty', '==', specialty));\n      const doctorsSnapshot = await getDocs(q);\n      const doctorsList = doctorsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setDoctors(doctorsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadAvailableSlots = async doctorId => {\n    try {\n      const slotsRef = collection(db, 'appointments');\n      const q = query(slotsRef, where('doctorId', '==', doctorId), where('available', '==', true));\n      const slotsSnapshot = await getDocs(q);\n      const slotsList = slotsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setAvailableSlots(slotsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadUserAppointments = async () => {\n    if (!user) return;\n\n    try {\n      const appointmentsRef = collection(db, 'appointments');\n      const q = query(appointmentsRef, where('userId', '==', user.uid), where('available', '==', false));\n      const appointmentsSnapshot = await getDocs(q);\n      const appointmentsList = appointmentsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUserAppointments(appointmentsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Funciones de reserva y cancelación\n\n\n  const bookAppointment = async slotId => {\n    try {\n      const slotRef = doc(db, 'appointments', slotId);\n      await updateDoc(slotRef, {\n        available: false,\n        userId: user.uid\n      });\n      await loadUserAppointments();\n      await loadAvailableSlots(selectedDoctor);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const cancelAppointment = async slotId => {\n    try {\n      const slotRef = doc(db, 'appointments', slotId);\n      await updateDoc(slotRef, {\n        available: true,\n        userId: null\n      });\n      await loadUserAppointments();\n      await loadAvailableSlots(selectedDoctor);\n    } catch (err) {\n      setError(err.message);\n    }\n  }; // Renderizado de vistas\n\n\n  const renderLoginView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"Iniciar Sesi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleLogin,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  className: \"form-label\",\n                  children: \"Correo Electr\\xF3nico\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: \"form-label\",\n                  children: \"Contrase\\xF1a\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-danger\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Iniciar Sesi\\xF3n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  onClick: handleRegister,\n                  children: \"Registrarse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n\n  const renderMainView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Reserva de Citas M\\xE9dicas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary me-2\",\n            onClick: () => setAdminView(adminView === 'specialties' ? 'doctors' : 'specialties'),\n            children: \"Panel Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => auth.signOut(),\n            children: \"Cerrar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Reservar Cita\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                value: selectedSpecialty,\n                onChange: e => {\n                  const specialty = e.target.value;\n                  setSelectedSpecialty(specialty);\n                  loadDoctors(specialty);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Seleccionar Especialidad\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), specialties.map(specialty => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: specialty.name,\n                  children: specialty.name\n                }, specialty.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), doctors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                value: selectedDoctor,\n                onChange: e => {\n                  const doctorId = e.target.value;\n                  setSelectedDoctor(doctorId);\n                  loadAvailableSlots(doctorId);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Seleccionar M\\xE9dico\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: doctor.id,\n                  children: doctor.name\n                }, doctor.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), availableSlots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Horarios Disponibles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group\",\n                children: availableSlots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item d-flex justify-content-between align-items-center\",\n                  children: [slot.date, \" - \", slot.time, /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-sm\",\n                    onClick: () => bookAppointment(slot.id),\n                    children: \"Reservar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 25\n                  }, this)]\n                }, slot.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Mis Citas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: userAppointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: userAppointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item d-flex justify-content-between align-items-center\",\n                children: [appointment.date, \" - \", appointment.time, /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger btn-sm\",\n                  onClick: () => cancelAppointment(appointment.id),\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this)]\n              }, appointment.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No tienes citas programadas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: adminView === 'specialties' ? 'Especialidades' : 'Médicos'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this); // Renderizado principal\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !user ? renderLoginView() : renderMainView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MedicalAppointmentsApp, \"NSlNNaVl11eKICmiRxHupjpfXX8=\");\n\n_c = MedicalAppointmentsApp;\nexport default MedicalAppointmentsApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicalAppointmentsApp\");","map":{"version":3,"sources":["/home/imperio/Documents/code/pp/Login-Auth-Firebase-ReactJS/src/components/dashboard.js"],"names":["React","useState","useEffect","initializeApp","getFirestore","collection","query","where","getDocs","updateDoc","addDoc","doc","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","firebaseConfig","MedicalAppointmentsApp","user","setUser","email","setEmail","password","setPassword","error","setError","specialties","setSpecialties","doctors","setDoctors","availableSlots","setAvailableSlots","userAppointments","setUserAppointments","selectedSpecialty","setSelectedSpecialty","selectedDoctor","setSelectedDoctor","isAdmin","setIsAdmin","adminView","setAdminView","app","db","auth","unsubscribe","currentUser","loadSpecialties","loadUserAppointments","handleLogin","e","preventDefault","err","message","handleRegister","specialtiesRef","specialtiesSnapshot","specialtiesList","docs","map","id","data","loadDoctors","specialty","doctorsRef","q","doctorsSnapshot","doctorsList","loadAvailableSlots","doctorId","slotsRef","slotsSnapshot","slotsList","appointmentsRef","uid","appointmentsSnapshot","appointmentsList","bookAppointment","slotId","slotRef","available","userId","cancelAppointment","renderLoginView","target","value","renderMainView","signOut","name","length","doctor","slot","date","time","appointment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getFirestore, \n  collection, \n  query, \n  where, \n  getDocs, \n  updateDoc, \n  addDoc, \n  doc \n} from './firebase';\nimport { \n  getAuth, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword,\n  onAuthStateChanged\n} from './firebase/auth';\nimport firebaseConfig from './firebase'\n\n\nfunction MedicalAppointmentsApp() {\n  // Estados de autenticación\n  const [user, setUser] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  // Estados de la aplicación\n  const [specialties, setSpecialties] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [userAppointments, setUserAppointments] = useState([]);\n\n  // Estados de selección\n  const [selectedSpecialty, setSelectedSpecialty] = useState('');\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n\n  // Estados de administrador\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [adminView, setAdminView] = useState('specialties');\n\n  // Inicializar Firebase\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n  const auth = getAuth(app);\n\n  // Efecto para manejar la autenticación\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      if (currentUser) {\n        setUser(currentUser);\n        setIsAdmin(currentUser.email === 'admin@clinica.com');\n        loadSpecialties();\n        loadUserAppointments();\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  // Funciones de autenticación\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Funciones de carga de datos\n  const loadSpecialties = async () => {\n    try {\n      const specialtiesRef = collection(db, 'specialties');\n      const specialtiesSnapshot = await getDocs(specialtiesRef);\n      const specialtiesList = specialtiesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setSpecialties(specialtiesList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadDoctors = async (specialty) => {\n    try {\n      const doctorsRef = collection(db, 'doctors');\n      const q = query(doctorsRef, where('specialty', '==', specialty));\n      const doctorsSnapshot = await getDocs(q);\n      const doctorsList = doctorsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setDoctors(doctorsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadAvailableSlots = async (doctorId) => {\n    try {\n      const slotsRef = collection(db, 'appointments');\n      const q = query(\n        slotsRef, \n        where('doctorId', '==', doctorId),\n        where('available', '==', true)\n      );\n      const slotsSnapshot = await getDocs(q);\n      const slotsList = slotsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setAvailableSlots(slotsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const loadUserAppointments = async () => {\n    if (!user) return;\n    try {\n      const appointmentsRef = collection(db, 'appointments');\n      const q = query(\n        appointmentsRef, \n        where('userId', '==', user.uid),\n        where('available', '==', false)\n      );\n      const appointmentsSnapshot = await getDocs(q);\n      const appointmentsList = appointmentsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUserAppointments(appointmentsList);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Funciones de reserva y cancelación\n  const bookAppointment = async (slotId) => {\n    try {\n      const slotRef = doc(db, 'appointments', slotId);\n      await updateDoc(slotRef, {\n        available: false,\n        userId: user.uid\n      });\n      await loadUserAppointments();\n      await loadAvailableSlots(selectedDoctor);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const cancelAppointment = async (slotId) => {\n    try {\n      const slotRef = doc(db, 'appointments', slotId);\n      await updateDoc(slotRef, {\n        available: true,\n        userId: null\n      });\n      await loadUserAppointments();\n      await loadAvailableSlots(selectedDoctor);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Renderizado de vistas\n  const renderLoginView = () => (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h2 className=\"text-center\">Iniciar Sesión</h2>\n            </div>\n            <div className=\"card-body\">\n              <form onSubmit={handleLogin}>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"email\" className=\"form-label\">Correo Electrónico</label>\n                  <input \n                    type=\"email\" \n                    className=\"form-control\" \n                    id=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required \n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"password\" className=\"form-label\">Contraseña</label>\n                  <input \n                    type=\"password\" \n                    className=\"form-control\" \n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required \n                  />\n                </div>\n                {error && (\n                  <div className=\"alert alert-danger\">{error}</div>\n                )}\n                <div className=\"d-grid gap-2\">\n                  <button type=\"submit\" className=\"btn btn-primary\">Iniciar Sesión</button>\n                  <button \n                    type=\"button\" \n                    className=\"btn btn-secondary\"\n                    onClick={handleRegister}\n                  >\n                    Registrarse\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderMainView = () => (\n    <div className=\"container mt-4\">\n      <div className=\"row\">\n        <div className=\"col-12 d-flex justify-content-between align-items-center mb-4\">\n          <h1>Reserva de Citas Médicas</h1>\n          <div>\n            {isAdmin && (\n              <button \n                className=\"btn btn-outline-secondary me-2\"\n                onClick={() => setAdminView(adminView === 'specialties' ? 'doctors' : 'specialties')}\n              >\n                Panel Admin\n              </button>\n            )}\n            <button \n              className=\"btn btn-danger\"\n              onClick={() => auth.signOut()}\n            >\n              Cerrar Sesión\n            </button>\n          </div>\n        </div>\n\n        {/* Sección de Reserva de Citas */}\n        <div className=\"col-md-8\">\n          <div className=\"card\">\n            <div className=\"card-header\">Reservar Cita</div>\n            <div className=\"card-body\">\n              {/* Selector de Especialidad */}\n              <div className=\"mb-3\">\n                <select \n                  className=\"form-select\"\n                  value={selectedSpecialty}\n                  onChange={(e) => {\n                    const specialty = e.target.value;\n                    setSelectedSpecialty(specialty);\n                    loadDoctors(specialty);\n                  }}\n                >\n                  <option value=\"\">Seleccionar Especialidad</option>\n                  {specialties.map(specialty => (\n                    <option key={specialty.id} value={specialty.name}>\n                      {specialty.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              {/* Selector de Médico */}\n              {doctors.length > 0 && (\n                <div className=\"mb-3\">\n                  <select \n                    className=\"form-select\"\n                    value={selectedDoctor}\n                    onChange={(e) => {\n                      const doctorId = e.target.value;\n                      setSelectedDoctor(doctorId);\n                      loadAvailableSlots(doctorId);\n                    }}\n                  >\n                    <option value=\"\">Seleccionar Médico</option>\n                    {doctors.map(doctor => (\n                      <option key={doctor.id} value={doctor.id}>\n                        {doctor.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n\n              {/* Horarios Disponibles */}\n              {availableSlots.length > 0 && (\n                <div>\n                  <h4>Horarios Disponibles</h4>\n                  <ul className=\"list-group\">\n                    {availableSlots.map(slot => (\n                      <li \n                        key={slot.id} \n                        className=\"list-group-item d-flex justify-content-between align-items-center\"\n                      >\n                        {slot.date} - {slot.time}\n                        <button \n                          className=\"btn btn-primary btn-sm\"\n                          onClick={() => bookAppointment(slot.id)}\n                        >\n                          Reservar\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Mis Citas */}\n          <div className=\"card mt-4\">\n            <div className=\"card-header\">Mis Citas</div>\n            <div className=\"card-body\">\n              {userAppointments.length > 0 ? (\n                <ul className=\"list-group\">\n                  {userAppointments.map(appointment => (\n                    <li \n                      key={appointment.id} \n                      className=\"list-group-item d-flex justify-content-between align-items-center\"\n                    >\n                      {appointment.date} - {appointment.time}\n                      <button \n                        className=\"btn btn-danger btn-sm\"\n                        onClick={() => cancelAppointment(appointment.id)}\n                      >\n                        Cancelar\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p>No tienes citas programadas</p>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Panel de Administrador */}\n        {isAdmin && (\n          <div className=\"col-md-4\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                {adminView === 'specialties' ? 'Especialidades' : 'Médicos'}\n              </div>\n              <div className=\"card-body\">\n                {/* Contenido del panel de admin */}\n                {/* Puedes añadir formularios para agregar especialidades y médicos */}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  // Renderizado principal\n  return (\n    <div>\n      {!user ? renderLoginView() : renderMainView()}\n    </div>\n  );\n}\n\nexport default MedicalAppointmentsApp;\n"]},"metadata":{},"sourceType":"module"}